# Multi-stage build for Autonomous MoE Debugger
FROM python:3.12-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt pyproject.toml ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Production stage
FROM python:3.12-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r moe && useradd -r -g moe moe

# Set working directory
WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY src/ ./src/
COPY pyproject.toml ./

# Install the package in development mode
RUN pip install -e .

# Create necessary directories
RUN mkdir -p logs models data cache && \
    chown -R moe:moe /app

# Copy autonomous service configurations
COPY docker-entrypoint-autonomous.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-autonomous.sh

# Switch to non-root user
USER moe

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Environment variables
ENV PYTHONPATH=/app/src \
    PYTHONUNBUFFERED=1 \
    AUTONOMOUS_FEATURES_ENABLED=true \
    LOG_LEVEL=INFO

# Expose ports
EXPOSE 8080 8081 8082 8083

# Entry point
ENTRYPOINT ["docker-entrypoint-autonomous.sh"]
CMD ["python", "-m", "moe_debugger.server"]